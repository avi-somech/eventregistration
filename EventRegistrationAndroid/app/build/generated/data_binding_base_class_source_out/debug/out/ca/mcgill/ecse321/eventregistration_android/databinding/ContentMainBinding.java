// Generated by view binder compiler. Do not edit!
package ca.mcgill.ecse321.eventregistration_android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ca.mcgill.ecse321.eventregistration_android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout contentMain;

  @NonNull
  public final TextView endtime;

  @NonNull
  public final TextView error;

  @NonNull
  public final Spinner eventspinner;

  @NonNull
  public final TextView neweventDate;

  @NonNull
  public final EditText neweventName;

  @NonNull
  public final EditText newpersonName;

  @NonNull
  public final Spinner personspinner;

  @NonNull
  public final TextView starttime;

  private ContentMainBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout contentMain,
      @NonNull TextView endtime, @NonNull TextView error, @NonNull Spinner eventspinner,
      @NonNull TextView neweventDate, @NonNull EditText neweventName,
      @NonNull EditText newpersonName, @NonNull Spinner personspinner,
      @NonNull TextView starttime) {
    this.rootView = rootView;
    this.contentMain = contentMain;
    this.endtime = endtime;
    this.error = error;
    this.eventspinner = eventspinner;
    this.neweventDate = neweventDate;
    this.neweventName = neweventName;
    this.newpersonName = newpersonName;
    this.personspinner = personspinner;
    this.starttime = starttime;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout contentMain = (RelativeLayout) rootView;

      id = R.id.endtime;
      TextView endtime = ViewBindings.findChildViewById(rootView, id);
      if (endtime == null) {
        break missingId;
      }

      id = R.id.error;
      TextView error = ViewBindings.findChildViewById(rootView, id);
      if (error == null) {
        break missingId;
      }

      id = R.id.eventspinner;
      Spinner eventspinner = ViewBindings.findChildViewById(rootView, id);
      if (eventspinner == null) {
        break missingId;
      }

      id = R.id.newevent_date;
      TextView neweventDate = ViewBindings.findChildViewById(rootView, id);
      if (neweventDate == null) {
        break missingId;
      }

      id = R.id.newevent_name;
      EditText neweventName = ViewBindings.findChildViewById(rootView, id);
      if (neweventName == null) {
        break missingId;
      }

      id = R.id.newperson_name;
      EditText newpersonName = ViewBindings.findChildViewById(rootView, id);
      if (newpersonName == null) {
        break missingId;
      }

      id = R.id.personspinner;
      Spinner personspinner = ViewBindings.findChildViewById(rootView, id);
      if (personspinner == null) {
        break missingId;
      }

      id = R.id.starttime;
      TextView starttime = ViewBindings.findChildViewById(rootView, id);
      if (starttime == null) {
        break missingId;
      }

      return new ContentMainBinding((RelativeLayout) rootView, contentMain, endtime, error,
          eventspinner, neweventDate, neweventName, newpersonName, personspinner, starttime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
